{"ast":null,"code":"import _defineProperty from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jfb/Desktop/test-form/src/formContainer.js\";\nimport React, { Component } from 'react';\nvar buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nvar Button = function Button(props) {\n  console.log(props.value);\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\",\n    onClick: props.action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.title);\n};\n\nvar Input = function Input(props) {\n  console.log(props.value);\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: props.name,\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", Object.assign({\n    className: \"form-control\",\n    id: props.name,\n    name: props.name,\n    type: props.inputType,\n    value: props.value,\n    onChange: props.handleChange,\n    placeholder: props.placeholder\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nvar TextArea = function TextArea(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.title), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    name: props.name,\n    rows: props.rows,\n    cols: props.cols,\n    value: props.value,\n    onChange: props.handleChange,\n    placeholder: props.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormContainer, _Component);\n\n  function FormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).call(this, props));\n    _this.state = {\n      formInfo: {\n        first: \"\",\n        about: \"\"\n      }\n    };\n    _this.handleTextArea = _this.handleTextArea.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFullName = _this.handleFullName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClearForm = _this.handleClearForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  _createClass(FormContainer, [{\n    key: \"handleFullName\",\n    value: function handleFullName(e) {\n      var _this2 = this;\n\n      var value = e.target.value;\n      this.setState(function (prevState) {\n        return {\n          formInfo: _objectSpread({}, prevState.formInfo, {\n            name: value\n          })\n        };\n      }, function () {\n        return console.log(_this2.state.formInfo);\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var _this3 = this;\n\n      var value = e.target.value;\n      var name = e.target.name;\n      this.setState(function (prevState) {\n        return {\n          formInfo: _objectSpread({}, prevState.formInfo, _defineProperty({}, name, value))\n        };\n      }, function () {\n        return console.log(_this3.state.formInfo);\n      });\n    }\n  }, {\n    key: \"handleTextArea\",\n    value: function handleTextArea(e) {\n      var _this4 = this;\n\n      console.log(\"Inside handleTextArea\");\n      var value = e.target.value;\n      this.setState(function (prevState) {\n        return {\n          formInfo: _objectSpread({}, prevState.formInfo, {\n            about: value\n          })\n        };\n      }, function () {\n        return console.log(_this4.state.formInfo);\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(e) {\n      e.preventDefault();\n      var userData = this.state.formInfo;\n      fetch(\"http://example.com\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(\"Successful\" + data);\n        });\n      });\n    }\n  }, {\n    key: \"handleClearForm\",\n    value: function handleClearForm(e) {\n      e.preventDefault();\n      this.setState({\n        formInfo: {\n          name: \"\",\n          age: \"\",\n          gender: \"\",\n          skills: [],\n          about: \"\"\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"container-fluid\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Full Name\",\n        name: \"name\",\n        value: this.state.formInfo.name,\n        placeholder: \"Enter your name\",\n        handleChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), \" \", React.createElement(TextArea, {\n        title: \"About you.\",\n        rows: 10,\n        value: this.state.formInfo.about,\n        name: \"currentPetInfo\",\n        handleChange: this.handleTextArea,\n        placeholder: \"Describe your past experience and skills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: \"primary\",\n        title: \"Submit\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \" \", React.createElement(Button, {\n        action: this.handleClearForm,\n        type: \"secondary\",\n        title: \"Clear\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), \" \");\n    }\n  }]);\n\n  return FormContainer;\n}(Component);\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/jfb/Desktop/test-form/src/formContainer.js"],"names":["React","Component","buttonStyle","margin","Button","props","console","log","value","style","type","action","title","Input","name","inputType","handleChange","placeholder","TextArea","rows","cols","FormContainer","state","formInfo","first","about","handleTextArea","bind","handleFullName","handleFormSubmit","handleClearForm","handleInput","e","target","setState","prevState","preventDefault","userData","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","age","gender","skills"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE;AADU,CAApB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACA,SACE;AACE,IAAA,KAAK,EAAEH,KAAK,CAACI,KADf;AAEE,IAAA,SAAS,EACPJ,KAAK,CAACK,IAAN,KAAe,SAAf,GAA2B,iBAA3B,GAA+C,mBAHnD;AAKE,IAAA,OAAO,EAAEL,KAAK,CAACM,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,KAAK,CAACO,KAPT,CADF;AAWD,CAbD;;AAeA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAR,KAAK,EAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACE,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAEH,KAAK,CAACS,IAAlB;AAAwB,IAAA,SAAS,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACO,KADT,CADF,EAIE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,EAAE,EAAEP,KAAK,CAACS,IAFZ;AAGE,IAAA,IAAI,EAAET,KAAK,CAACS,IAHd;AAIE,IAAA,IAAI,EAAET,KAAK,CAACU,SAJd;AAKE,IAAA,KAAK,EAAEV,KAAK,CAACG,KALf;AAME,IAAA,QAAQ,EAAEH,KAAK,CAACW,YANlB;AAOE,IAAA,WAAW,EAAEX,KAAK,CAACY;AAPrB,KAQMZ,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CADF;AAiBD,CAnBD;;AAqBA,IAAMa,QAAQ,GAAG,SAAXA,QAAW,CAAAb,KAAK;AAAA,SACpB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAAK,CAACO,KAArC,CADF,EAEE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACS,IAFd;AAGE,IAAA,IAAI,EAAET,KAAK,CAACc,IAHd;AAIE,IAAA,IAAI,EAAEd,KAAK,CAACe,IAJd;AAKE,IAAA,KAAK,EAAEf,KAAK,CAACG,KALf;AAME,IAAA,QAAQ,EAAEH,KAAK,CAACW,YANlB;AAOE,IAAA,WAAW,EAAEX,KAAK,CAACY,WAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADoB;AAAA,CAAtB;;IAgBMI,a;;;;;AACJ,yBAAYhB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AAEA,UAAKiB,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,KAAK,EAAE;AAFC;AADC,KAAb;AAOA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,uDAAxB;AACA,UAAKG,eAAL,GAAuB,MAAKA,eAAL,CAAqBH,IAArB,uDAAvB;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,uDAAnB;AAdiB;AAelB;AAED;;;;;mCAEeK,C,EAAG;AAAA;;AAChB,UAAIxB,KAAK,GAAGwB,CAAC,CAACC,MAAF,CAASzB,KAArB;AACA,WAAK0B,QAAL,CACE,UAAAC,SAAS;AAAA,eAAK;AACZZ,UAAAA,QAAQ,oBACHY,SAAS,CAACZ,QADP;AAENT,YAAAA,IAAI,EAAEN;AAFA;AADI,SAAL;AAAA,OADX,EAOE;AAAA,eAAMF,OAAO,CAACC,GAAR,CAAY,MAAI,CAACe,KAAL,CAAWC,QAAvB,CAAN;AAAA,OAPF;AASD;;;gCAEWS,C,EAAG;AAAA;;AACb,UAAIxB,KAAK,GAAGwB,CAAC,CAACC,MAAF,CAASzB,KAArB;AACA,UAAIM,IAAI,GAAGkB,CAAC,CAACC,MAAF,CAASnB,IAApB;AACA,WAAKoB,QAAL,CACE,UAAAC,SAAS;AAAA,eAAK;AACZZ,UAAAA,QAAQ,oBACHY,SAAS,CAACZ,QADP,sBAELT,IAFK,EAEEN,KAFF;AADI,SAAL;AAAA,OADX,EAOE;AAAA,eAAMF,OAAO,CAACC,GAAR,CAAY,MAAI,CAACe,KAAL,CAAWC,QAAvB,CAAN;AAAA,OAPF;AASD;;;mCAEcS,C,EAAG;AAAA;;AAChB1B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAIC,KAAK,GAAGwB,CAAC,CAACC,MAAF,CAASzB,KAArB;AACA,WAAK0B,QAAL,CACE,UAAAC,SAAS;AAAA,eAAK;AACZZ,UAAAA,QAAQ,oBACHY,SAAS,CAACZ,QADP;AAENE,YAAAA,KAAK,EAAEjB;AAFD;AADI,SAAL;AAAA,OADX,EAOE;AAAA,eAAMF,OAAO,CAACC,GAAR,CAAY,MAAI,CAACe,KAAL,CAAWC,QAAvB,CAAN;AAAA,OAPF;AASD;;;qCAGgBS,C,EAAG;AAClBA,MAAAA,CAAC,CAACI,cAAF;AACA,UAAIC,QAAQ,GAAG,KAAKf,KAAL,CAAWC,QAA1B;AAEAe,MAAAA,KAAK,CAAC,oBAAD,EAAuB;AAC1BC,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAFoB;AAG1BM,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT;AAHiB,OAAvB,CAAL,CAOGC,IAPH,CAOQ,UAAAC,QAAQ,EAAI;AAClBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAG,IAAI,EAAI;AAC3B1C,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeyC,IAA3B;AACD,SAFD;AAGD,OAXD;AAYD;;;oCAEehB,C,EAAG;AACjBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKF,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE;AACRT,UAAAA,IAAI,EAAE,EADE;AAERmC,UAAAA,GAAG,EAAE,EAFG;AAGRC,UAAAA,MAAM,EAAE,EAHA;AAIRC,UAAAA,MAAM,EAAE,EAJA;AAKR1B,UAAAA,KAAK,EAAE;AALC;AADE,OAAd;AASD;;;6BAEQ;AACP,aACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAkC,QAAA,QAAQ,EAAE,KAAKI,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAE,MADb;AAEE,QAAA,KAAK,EAAE,WAFT;AAGE,QAAA,IAAI,EAAE,MAHR;AAIE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBT,IAJ7B;AAKE,QAAA,WAAW,EAAE,iBALf;AAME,QAAA,YAAY,EAAE,KAAKiB,WANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQK,GARL,EAWE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,YADT;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,QAAX,CAAoBE,KAH7B;AAIE,QAAA,IAAI,EAAE,gBAJR;AAKE,QAAA,YAAY,EAAE,KAAKC,cALrB;AAME,QAAA,WAAW,EAAE,0CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAoBE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAE,KAAKG,gBADf;AAEE,QAAA,IAAI,EAAE,SAFR;AAGE,QAAA,KAAK,EAAE,QAHT;AAIE,QAAA,KAAK,EAAE3B,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAyBK,GAzBL,EA2BE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAE,KAAK4B,eADf;AAEE,QAAA,IAAI,EAAE,WAFR;AAGE,QAAA,KAAK,EAAE,OAHT;AAIE,QAAA,KAAK,EAAE5B,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,EAgCK,GAhCL,CADF;AAqCD;;;;EAnIyBD,S;;AAsI5B,eAAeoB,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nconst Button = props => {\n  console.log(props.value);\n  return (\n    <button\n      style={props.style}\n      className={\n        props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\"\n      }\n      onClick={props.action}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nconst Input = props => {\nconsole.log(props.value);\n  return (\n    <div className=\"form-group\">\n      <label for={props.name} className=\"form-label\">\n        {props.title}\n      </label>\n      <input\n        className=\"form-control\"\n        id={props.name}\n        name={props.name}\n        type={props.inputType}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst TextArea = props => (\n  <div className=\"form-group\">\n    <label className=\"form-label\">{props.title}</label>\n    <textarea\n      className=\"form-control\"\n      name={props.name}\n      rows={props.rows}\n      cols={props.cols}\n      value={props.value}\n      onChange={props.handleChange}\n      placeholder={props.placeholder}\n    />\n  </div>\n);\n\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formInfo: {\n        first: \"\",\n        about: \"\"\n      },\n\n    };\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleFullName(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        formInfo: {\n          ...prevState.formInfo,\n          name: value\n        }\n      }),\n      () => console.log(this.state.formInfo)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        formInfo: {\n          ...prevState.formInfo,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.formInfo)\n    );\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        formInfo: {\n          ...prevState.formInfo,\n          about: value\n        }\n      }),\n      () => console.log(this.state.formInfo)\n    );\n  }\n\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.formInfo;\n\n    fetch(\"http://example.com\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      formInfo: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Input\n          inputType={\"text\"}\n          title={\"Full Name\"}\n          name={\"name\"}\n          value={this.state.formInfo.name}\n          placeholder={\"Enter your name\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the user */}\n\n        <TextArea\n          title={\"About you.\"}\n          rows={10}\n          value={this.state.formInfo.about}\n          name={\"currentPetInfo\"}\n          handleChange={this.handleTextArea}\n          placeholder={\"Describe your past experience and skills\"}\n        />\n        {/* About you */}\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}