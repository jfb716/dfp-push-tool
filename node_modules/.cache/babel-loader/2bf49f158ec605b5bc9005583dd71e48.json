{"ast":null,"code":"import _defineProperty from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jfb/Desktop/test-form/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jfb/Desktop/test-form/src/formContainer.js\";\nimport React, { Component } from 'react';\nvar buttonStyle = {\n  margin: \"10px\"\n};\nvar formStyle = {\n  border: \"1px solid black\",\n  display: \"block\"\n};\nvar inputStyle = {};\nvar textAreaStyle = {};\n\nvar Button = function Button(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    onClick: props.action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.title);\n};\n\nvar Input = function Input(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: props.name,\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", Object.assign({\n    className: \"form-control\",\n    id: props.name,\n    name: props.name,\n    type: props.inputType,\n    value: props.value,\n    onChange: props.handleChange,\n    placeholder: props.placeholder\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nvar TextArea = function TextArea(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.title), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    name: props.name,\n    rows: props.rows,\n    cols: props.cols,\n    value: props.value,\n    onChange: props.handleChange,\n    placeholder: props.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormContainer, _Component);\n\n  function FormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).call(this, props));\n    _this.state = {\n      formInfo: {\n        firstName: \"\",\n        lastName: \"\",\n        about: \"\"\n      }\n    };\n    _this.handleTextArea = _this.handleTextArea.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClearForm = _this.handleClearForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  _createClass(FormContainer, [{\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var value = e.target.value;\n      var name = e.target.name;\n      console.log(name + \" \" + value);\n      this.setState(function (prevState) {\n        return {\n          formInfo: _objectSpread({}, prevState.formInfo, _defineProperty({}, name, value))\n        };\n      });\n    }\n  }, {\n    key: \"handleTextArea\",\n    value: function handleTextArea(e) {\n      var value = e.target.value;\n      this.setState(function (prevState) {\n        return {\n          formInfo: _objectSpread({}, prevState.formInfo, {\n            about: value\n          })\n        };\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(e) {\n      e.preventDefault();\n      var userData = this.state.formInfo;\n      fetch(\"http://example.com\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(\"Successful\" + data);\n        });\n      });\n    }\n  }, {\n    key: \"handleClearForm\",\n    value: function handleClearForm(e) {\n      e.preventDefault();\n      this.setState({\n        formInfo: {\n          firstName: \"\",\n          lastName: \"\",\n          about: \"\"\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"mainForm\",\n        onSubmit: this.handleFormSubmit,\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputType: \"text\",\n        title: \"First Name\",\n        name: \"firstName\",\n        value: this.state.formInfo.firstName,\n        placeholder: \"Enter your first name\",\n        handleChange: this.handleInput,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Last Name\",\n        name: \"lastName\",\n        value: this.state.formInfo.lastName,\n        placeholder: \"Enter your last name\",\n        handleChange: this.handleInput,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        title: \"About you.\",\n        rows: 10,\n        value: this.state.formInfo.about,\n        name: \"currentPetInfo\",\n        handleChange: this.handleTextArea,\n        placeholder: \"Describe your past experience and skills\",\n        style: textAreaStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: \"submit\",\n        title: \"Submit\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleClearForm,\n        type: \"clear\",\n        title: \"Clear\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FormContainer;\n}(Component);\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/jfb/Desktop/test-form/src/formContainer.js"],"names":["React","Component","buttonStyle","margin","formStyle","border","display","inputStyle","textAreaStyle","Button","props","style","action","title","Input","name","inputType","value","handleChange","placeholder","TextArea","rows","cols","FormContainer","state","formInfo","firstName","lastName","about","handleTextArea","bind","handleFormSubmit","handleClearForm","handleInput","e","target","console","log","setState","prevState","preventDefault","userData","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst buttonStyle = {\n  margin: \"10px\"\n};\n\nconst formStyle = {\n  border: \"1px solid black\",\n  display: \"block\"\n\n};\n\nconst inputStyle = {\n\n};\n\nconst textAreaStyle = {\n\n};\n\n\nconst Button = props => {\n  return (\n    <button\n      style={props.style}\n      onClick={props.action}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nconst Input = props => {\n  return (\n    <div className=\"form-group\">\n      <label for={props.name} className=\"form-label\">\n        {props.title}\n      </label>\n      <input\n        className=\"form-control\"\n        id={props.name}\n        name={props.name}\n        type={props.inputType}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst TextArea = props => (\n  <div className=\"form-group\">\n    <label className=\"form-label\">{props.title}</label>\n    <textarea\n      className=\"form-control\"\n      name={props.name}\n      rows={props.rows}\n      cols={props.cols}\n      value={props.value}\n      onChange={props.handleChange}\n      placeholder={props.placeholder}\n    />\n  </div>\n);\n\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formInfo: {\n        firstName: \"\",\n        lastName:\"\",\n        about: \"\"\n      },\n\n    };\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    console.log(name + \" \" + value);\n    this.setState(\n      prevState => ({\n        formInfo: {\n          ...prevState.formInfo,\n          [name]: value\n        }\n      }),\n    );\n  }\n\n  handleTextArea(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        formInfo: {\n          ...prevState.formInfo,\n          about: value\n        }\n      }),\n    );\n  }\n\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.formInfo;\n\n    fetch(\"http://example.com\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      formInfo: {\n        firstName: \"\",\n        lastName: \"\",\n        about: \"\"\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"mainForm\" onSubmit={this.handleFormSubmit} style={formStyle}>\n        <Input\n          inputType={\"text\"}\n          title={\"First Name\"}\n          name={\"firstName\"}\n          value={this.state.formInfo.firstName}\n          placeholder={\"Enter your first name\"}\n          handleChange={this.handleInput}\n          style={inputStyle}\n        />\n\n        <Input\n          inputType={\"text\"}\n          title={\"Last Name\"}\n          name={\"lastName\"}\n          value={this.state.formInfo.lastName}\n          placeholder={\"Enter your last name\"}\n          handleChange={this.handleInput}\n          style={inputStyle}\n        />\n\n        <TextArea\n          title={\"About you.\"}\n          rows={10}\n          value={this.state.formInfo.about}\n          name={\"currentPetInfo\"}\n          handleChange={this.handleTextArea}\n          placeholder={\"Describe your past experience and skills\"}\n          style={textAreaStyle}\n        />\n\n        <Button\n          action={this.handleFormSubmit}\n          type={\"submit\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />\n\n        <Button\n          action={this.handleClearForm}\n          type={\"clear\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />\n      </form>\n    );\n  }\n}\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}